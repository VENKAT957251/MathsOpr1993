<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite thread-count="2" parallel="classes" name="Failed suite [Calculator]" guice-stage="DEVELOPMENT">
  <test thread-count="2" parallel="classes" name="ParameterAndIncludeGrp(failed)">
    <parameter name="value2" value="20"/>
    <parameter name="value1" value="40"/>
    <parameter name="value4" value="9"/>
    <parameter name="value3" value="2"/>
    <groups>
      <run>
        <include name="MARS"/>
        <include name="EARTH"/>
      </run>
    </groups>
    <classes>
      <class name="com.testexecution.java.CalculatortestNgparameter">
        <methods>
          <include name="Multiplication" invocation-numbers="0"/>
          <include name="Negate" invocation-numbers="0"/>
        </methods>
      </class> <!-- com.testexecution.java.CalculatortestNgparameter -->
    </classes>
  </test> <!-- ParameterAndIncludeGrp(failed) -->
  <test thread-count="2" parallel="classes" name="ParameterandExcludeGrp(failed)">
    <parameter name="value2" value="20"/>
    <parameter name="value1" value="40"/>
    <parameter name="value4" value="9"/>
    <parameter name="value3" value="2"/>
    <groups>
      <run>
        <exclude name="MARS"/>
        <exclude name="JUPITER"/>
      </run>
    </groups>
    <classes>
      <class name="com.testexecution.java.CalculatortestNgparameter">
        <methods>
          <include name="Negate" invocation-numbers="0"/>
        </methods>
      </class> <!-- com.testexecution.java.CalculatortestNgparameter -->
    </classes>
  </test> <!-- ParameterandExcludeGrp(failed) -->
  <test thread-count="2" parallel="classes" name="ParameterandIncludeGrp_JUPITER(failed)">
    <parameter name="value2" value="20"/>
    <parameter name="value1" value="40"/>
    <parameter name="value4" value="9"/>
    <parameter name="value3" value="2"/>
    <groups>
      <run>
        <include name="JUPITER"/>
      </run>
    </groups>
    <classes>
      <class name="com.testexecution.java.CalculatortestNgparameter">
        <methods>
          <include name="Powerof1" invocation-numbers="0"/>
        </methods>
      </class> <!-- com.testexecution.java.CalculatortestNgparameter -->
    </classes>
  </test> <!-- ParameterandIncludeGrp_JUPITER(failed) -->
  <test thread-count="2" parallel="classes" name="DataProviderBased(failed)">
    <classes>
      <class name="com.testexecution.java.MathsDataprovider">
        <methods>
          <include name="Add" invocation-numbers="0 1 2"/>
          <include name="division" invocation-numbers="0 1 2"/>
          <include name="Powerof" invocation-numbers="0 1 2"/>
          <include name="invert" invocation-numbers="0 1 2"/>
          <include name="Sub" invocation-numbers="0 1 2"/>
        </methods>
      </class> <!-- com.testexecution.java.MathsDataprovider -->
    </classes>
  </test> <!-- DataProviderBased(failed) -->
  <test thread-count="2" parallel="classes" name="Assertionbased(failed)">
    <classes>
      <class name="com.testexecution.java.MathOpr">
        <methods>
          <include name="Multiplication"/>
          <include name="Negate"/>
        </methods>
      </class> <!-- com.testexecution.java.MathOpr -->
    </classes>
  </test> <!-- Assertionbased(failed) -->
  <test thread-count="2" parallel="classes" name="ParellelExecution(failed)">
    <classes>
      <class name="com.testexecution.java.CalcParellel1">
        <methods>
          <include name="div"/>
        </methods>
      </class> <!-- com.testexecution.java.CalcParellel1 -->
      <class name="com.testexecution.java.CalcParellel2">
        <methods>
          <include name="Modulus"/>
          <include name="invert"/>
        </methods>
      </class> <!-- com.testexecution.java.CalcParellel2 -->
    </classes>
  </test> <!-- ParellelExecution(failed) -->
</suite> <!-- Failed suite [Calculator] -->
